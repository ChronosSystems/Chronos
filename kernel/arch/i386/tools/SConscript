from SCons.Script import *

Import('host_env')
Import('REAL_CURDIR')

MKVECT      = 'mkvect'
BOOT_SIGN   = 'boot-sign'
BOOT_VERIFY = 'boot2-verify'

TOOLS_INCLUDE_PATHS = []
TOOLS_IGNORE_PATHS = ['^boot$', '^tools$']
TOOLS_GCC_SUFFIX = ['.c']
TOOLS_CCFLAGS = ['-m32', '-D__LINUX__']
TOOLS_LINKFLAGS = ['-m32']
TOOLS_SRCDIR = 'src'

TOOLS = {MKVECT:[MKVECT],
        BOOT_SIGN:[BOOT_SIGN],
        BOOT_VERIFY:[BOOT_VERIFY]}

COMMON_TOOL_DEPS = []

def build_tools_env():

    tools_env = host_env.Clone()

    tools_env.Append(CPPPATH=TOOLS_INCLUDE_PATHS, CCFLAGS=TOOLS_CCFLAGS,
            LDFLAGS=TOOLS_CCFLAGS, LINKFLAGS=TOOLS_LINKFLAGS)

    return tools_env

TOOLS_INCLUDE_PATHS = Build_include_paths(REAL_CURDIR, TOOLS_INCLUDE_PATHS)

tools_env = build_tools_env()

built_objects = {}

for tool in TOOLS:
    tools_env.Program(tool, File(Join_path(TOOLS_SRCDIR, tool+'.c')))
